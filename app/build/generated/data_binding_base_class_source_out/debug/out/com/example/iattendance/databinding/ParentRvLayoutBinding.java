// Generated by view binder compiler. Do not edit!
package com.example.iattendance.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.iattendance.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ParentRvLayoutBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView batchTxt;

  @NonNull
  public final TextView classInNo;

  @NonNull
  public final TextView divTxt;

  @NonNull
  public final View divider;

  @NonNull
  public final ImageButton nxtBtn;

  @NonNull
  public final TextView semTxt;

  @NonNull
  public final TextView subjName;

  @NonNull
  public final TextView subjType;

  @NonNull
  public final TextView subjectFirstLetter;

  @NonNull
  public final LinearLayout viewSub;

  @NonNull
  public final TextView yearTxt;

  private ParentRvLayoutBinding(@NonNull RelativeLayout rootView, @NonNull TextView batchTxt,
      @NonNull TextView classInNo, @NonNull TextView divTxt, @NonNull View divider,
      @NonNull ImageButton nxtBtn, @NonNull TextView semTxt, @NonNull TextView subjName,
      @NonNull TextView subjType, @NonNull TextView subjectFirstLetter,
      @NonNull LinearLayout viewSub, @NonNull TextView yearTxt) {
    this.rootView = rootView;
    this.batchTxt = batchTxt;
    this.classInNo = classInNo;
    this.divTxt = divTxt;
    this.divider = divider;
    this.nxtBtn = nxtBtn;
    this.semTxt = semTxt;
    this.subjName = subjName;
    this.subjType = subjType;
    this.subjectFirstLetter = subjectFirstLetter;
    this.viewSub = viewSub;
    this.yearTxt = yearTxt;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ParentRvLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ParentRvLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.parent_rv_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ParentRvLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.batch_txt;
      TextView batchTxt = ViewBindings.findChildViewById(rootView, id);
      if (batchTxt == null) {
        break missingId;
      }

      id = R.id.class_in_no;
      TextView classInNo = ViewBindings.findChildViewById(rootView, id);
      if (classInNo == null) {
        break missingId;
      }

      id = R.id.div_txt;
      TextView divTxt = ViewBindings.findChildViewById(rootView, id);
      if (divTxt == null) {
        break missingId;
      }

      id = R.id.divider;
      View divider = ViewBindings.findChildViewById(rootView, id);
      if (divider == null) {
        break missingId;
      }

      id = R.id.nxtBtn;
      ImageButton nxtBtn = ViewBindings.findChildViewById(rootView, id);
      if (nxtBtn == null) {
        break missingId;
      }

      id = R.id.sem_txt;
      TextView semTxt = ViewBindings.findChildViewById(rootView, id);
      if (semTxt == null) {
        break missingId;
      }

      id = R.id.subj_name;
      TextView subjName = ViewBindings.findChildViewById(rootView, id);
      if (subjName == null) {
        break missingId;
      }

      id = R.id.subj_type;
      TextView subjType = ViewBindings.findChildViewById(rootView, id);
      if (subjType == null) {
        break missingId;
      }

      id = R.id.subjectFirst_letter;
      TextView subjectFirstLetter = ViewBindings.findChildViewById(rootView, id);
      if (subjectFirstLetter == null) {
        break missingId;
      }

      id = R.id.viewSub;
      LinearLayout viewSub = ViewBindings.findChildViewById(rootView, id);
      if (viewSub == null) {
        break missingId;
      }

      id = R.id.year_txt;
      TextView yearTxt = ViewBindings.findChildViewById(rootView, id);
      if (yearTxt == null) {
        break missingId;
      }

      return new ParentRvLayoutBinding((RelativeLayout) rootView, batchTxt, classInNo, divTxt,
          divider, nxtBtn, semTxt, subjName, subjType, subjectFirstLetter, viewSub, yearTxt);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
